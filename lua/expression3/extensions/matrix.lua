--[[
	*****************************************************************************************************************************************************
		Quick math access
	*****************************************************************************************************************************************************
]]--
																--[ Author: ComposerFreak ]--
	local math = math
	local deg2rad = math.pi / 180
	local rad2deg = 180 / math.pi
	local sqrt = math.sqrt
	local acos = math.acos
	local asin = math.asin
	local atan2 = math.atan2
	local abs = math.abs
	local cos = math.cos
	local sin = math.sin
	local exp = math.exp
	local log = math.log
	local clamp = math.Clamp

--[[
	*****************************************************************************************************************************************************
		Create a new extension
	*****************************************************************************************************************************************************
]]--

	local extension = EXPR_LIB.RegisterExtension("matrix");

--[[
	*****************************************************************************************************************************************************
		Register Matrix2 class
	*****************************************************************************************************************************************************
]]--

	--|  x , y  |--
	--|         |--
	--| x2 , y2 |--
	
	matrix2 = {}
	matrix2.__index = matrix2

	local function Matrix2(x,y,x2,y2)
		return setmetatable({x = x,  y = y, x2 = x2, y2 = y2}, matrix2)
																			
	end

	local function isMatrix2(m2)

		return istable(m2) and #m2 == 4 and m2.x and m2.y and m2.x2 and m2.y2

	end

	extension:RegisterClass("mx2", "matrix2", isMatrix2, EXPR_LIB.NOTNIL)

	extension:RegisterConstructor("mx2", "", Matrix2, true)
	extension:RegisterConstructor("mx2", "n,n,n,n", Matrix2, true)
	extension:RegisterConstructor("mx2", "n,n,n,n", Matrix2, true)
	extension:RegisterConstructor("mx2", "v2,v2", function(a,b) return Matrix2(a.x, b.x, a.y, b.y) end, true)
	extension:RegisterConstructor("mx2", "v2,v2", function(a,b) return Matrix2(a.x, a.y, b.x, b.y) end, true)


--[[
	*****************************************************************************************************************************************************
	 	Matrix2 Global Funcs
	*****************************************************************************************************************************************************
]]--

	local function clone(m2)
		local temp = {}

		for k, v in ipairs(m2) do
			temp[k] = v
		end

		return temp
	end

	local function detm2(m2)
		return ( m2.x * m2.y2 - m2.x2 * m2.y )
	end
	
	local function inversem2(m2)
		local det = ( m2.x * m2.y2 - m2.x2 * m2.y )

		if det == 0 then return Matrix2(0,0,0,0) end
		
		return Matrix2( (m2.y2 / det), (-m2.y / det), (-m2.x2 / det), (m2.x /det) )
	end

	local function identitym2(m2)
		return Matrix2( 1, 0, 0, 1)
	end

--[[
	*****************************************************************************************************************************************************
		Matrix2 Operations
	*****************************************************************************************************************************************************
]]--

	extention:RegisterOperator("add", "mx2,mx2", "mx2", 1, function(a, b)
		return Matrix2( (a.x + b.x), (a.y + b.y), (a.x2 + b.x2), (a.y2 + b.y2) )
	end, true)

	extention:RegisterOperator("sub", "mx2,mx2", "mx2", 1, function(a, b)
		return Matrix2( (a.x - b.x), (a.y - b.y), (a.x2 - b.x2), (a.y2 - b.y2) )
	end, true)

	extention:RegisterOperator("mul", "n,mx2", "mx2", 1, function(n, a)
		return Matrix2( (n * a.x), (n * a.y), (n * a.x2), (n * a.y2) )
	end, true)

	extention:RegisterOperator("mul", "mx2,n", "mx2", 1, function(a, n)
		return Matrix2( (a.x * n), (a.y * n), (a.x2 * n), (a.y2 * n) )
	end, true)

	extention:RegisterOperator("mul", "mx2,v2", "mx2", 1, function(m2, v2)
		return Vector2( ((m2.x * v2.x) + (m2.y * v2.y)), ((m2.x2 * v2.x) + (m2.y2 * v2.y)) )
	end, true)

	extention:RegisterOperator("mul", "mx2,mx2", "mx2", 1, function(a, b)
		return Matrix2( ((a.x * b.x) + (a.y * b.x2)), ((a.x * b.y) + (a.y * b.y2)), ((a.x2 * b.x) + (a.y2 * b.x2)), ((a.x2 * b.y) + (a.y2 * b.y2)) )
	end, true)

	extention:RegisterOperator("div", "mx2,n", "mx2", 1, function(a, n)
		return Matrix2( (a.x / n), (a.y / n), (a.x2 / n), (a.y2 / n) )
	end, true)

	extention:RegisterOperator("exp", "mx2,n", "mx2", 1, function(a, n)
		
		if n == -1 then return inversem2(a)
		elseif n == 0 then return identitym2(a)
		elseif n == 1 then return a
		elseif n == 2 then return Matrix2( ((a.x * a.x) + (a.y * a.x2)), ((a.x * a.y) + (a.y * a.y2)), ((a.x2 * a.x) + (a.y2 * a.x2)), ((a.x2 * a.y) + (a.y2 * a.y2)) )
		else return Matrix2( 0,0,0,0 )
		
		end
	end, true)

--[[
	*****************************************************************************************************************************************************
		Matrix2 Functions
	*****************************************************************************************************************************************************
]]--



--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||]]--
--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--



--[[
	*****************************************************************************************************************************************************
		Register Matrix class
	*****************************************************************************************************************************************************
]]--

	--|  x ,  y ,  z |--
	--|              |--
	--| x2 , y2 , z2 |--
	--|              |--
	--| x3 , y3 , z3 |--


--[[
	*****************************************************************************************************************************************************
	 	Matrix Global Funcs
	*****************************************************************************************************************************************************
]]--



--[[
	*****************************************************************************************************************************************************
		Matrix Operations
	*****************************************************************************************************************************************************
]]--



--[[
	*****************************************************************************************************************************************************
		Matrix Functions
	*****************************************************************************************************************************************************
]]--



--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||]]--
--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--



--[[
	*****************************************************************************************************************************************************
		Register Matrix4 class
	*****************************************************************************************************************************************************
]]--

	--|  w ,  x ,  y ,  z |--
	--|                   |--
	--| w2 , x2 , y2 , z2 |--
	--|                   |--
	--| w3 , x3 , y3 , z3 |--
	--|                   |--
	--| w4 , x4 , y4 , z4 |--


--[[
	*****************************************************************************************************************************************************
	 	Matrix4 Global Funcs
	*****************************************************************************************************************************************************
]]--



--[[
	*****************************************************************************************************************************************************
		Matrix4 Operations
	*****************************************************************************************************************************************************
]]--



--[[
	*****************************************************************************************************************************************************
		Matrix4 Functions
	*****************************************************************************************************************************************************
]]--



--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[||||||||||||||||||||||||||||||||||||||||||	E  N  D     O  F    E  X  T  E  N  S  I  O  N  ||||||||||||||||||||||||||||||||||||||||||||||||||||||]]--
--[[-------------------------------------------------------------------------------------------------------------------------------------------------]]--

extension:EnableExtension();